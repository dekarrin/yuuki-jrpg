<project name="Yuuki" basedir="." default="all">
	
	<!-- magic properties -->
	<property name="ant.build.javac.source" value="1.7" />
	<property name="ant.build.javac.target" value="1.7" />
	
	<property file="ant/rootdirs.properties" />
	<property file="ant/packages.properties" />
	<property file="ant/build.properties" />
	
	<!-- other properties -->
	<property name="warnings" value="all" />
	
	<condition property="warning_count" value="${warnings}" else="all">
		<isset property="warnings"/>
	</condition>
	
	
	<!-- PUBLIC TARGETS -->
	
	<target name="dist-jar" depends="clean,dep-jar,all">
		<jar destfile="${dir.root.dist}/yuuki.jar" filesetmanifest="mergewithoutmain">
			<fileset dir="${dir.root.build}" />
			<zipfileset src="${dir.root.dist}/dependencies.jar">
				<exclude name="META-INF/*.SF" />
			</zipfileset>
			<manifest>
				<attribute name="Main-Class" value="${class.main.qualified}" />
			</manifest>
		</jar>
		<delete file="${dir.root.dist}/dependencies.jar" />
	</target>
	
	<target name="dep-jar">
		<jar destfile="${dir.root.dist}/dependencies.jar" filesetmanifest="mergewithoutmain">
			<zipgroupfileset dir="${dir.root.lib}">
				<include name="*.jar" />
			</zipgroupfileset>
		</jar>
	</target>
	
	<target name="test" depends="debug,main">
		<java classname="${class.main.qualified}" classpath="${dir.root.build}" fork="false" />
	</target>
	
	<target name="debug">
		<property name="DEBUG_TYPE" value="lines,vars,source" />
	</target>
	
	<target name="clean">
		<delete dir="${dir.root.dist}" />
	</target>
	
	<target name="all" depends="main,resource,lib"></target>

	<target name="main" depends="battle,ui,sound,animation,sprite,graphic,world,util,ai">
		<antcall target="-build">
			<param name="PACKAGE" value="yuuki" />
			<param name="NAME" value="${class.main}" />
		</antcall>
	</target>
	
	<target name="ai">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.ai}" />
		</antcall>
	</target>
	
	<target name="util">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.util}" />
		</antcall>
	</target>
	
	<target name="graphic">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.graphics}" />
		</antcall>
	</target>
	
	<target name="world">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.world}" />
		</antcall>
	</target>
	
	<target name="sprite">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.sprite}" />
		</antcall>
	</target>
	
	<target name="sound">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.sound}" />
		</antcall>
	</target>
	
	<target name="animation" depends="animation-engine">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.animation}" />
		</antcall>
	</target>
	
	<target name="animation-engine">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.animation-engine}" />
		</antcall>
	</target>
	
	<target name="ui" depends="screen,buff,action,entity">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.ui}" />
		</antcall>
	</target>
	
	<target name="screen" depends="buff,action,entity">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.screen}" />
		</antcall>
	</target>
	
	<target name="battle" depends="buff,action,entity">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.battle}" />
		</antcall>
	</target>
	
	<target name="entity" depends="action,buff">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.entity}" />
		</antcall>
	</target>
	
	<target name="action" depends="buff">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.action}" />
		</antcall>
	</target>
	
	<target name="buff">
		<antcall target="-build">
			<param name="PACKAGE" value="${dir.package.buff}" />
		</antcall>
	</target>
	
	<target name="doc-all" depends="doc-battle"></target>
	
	<target name="resource">
		<copy todir="${dir.root.build}/${dir.package.resource}">
			<fileset dir="${dir.root.source}/${dir.package.resource}" />
		</copy>
	</target>
	
	<target name="lib">
		<copy todir="${dir.root.dist}/${dir.root.lib}">
			<fileset dir="${dir.root.lib}" />
		</copy>
	</target>
	
	<target name="doc-battle" depends="doc-buff,doc-action,doc-entity">
		<antcall target="-doc">
			<param name="PACKAGE" value="${dir.package.battle}" />
			<param name="ACCESS" value="private" />
		</antcall>
	</target>
	
	<target name="doc-buff">
		<antcall target="-doc">
			<param name="PACKAGE" value="${dir.package.buff}" />
			<param name="ACCESS" value="private" />
		</antcall>
	</target>
	
	<target name="doc-action" depends="doc-buff">
		<antcall target="-doc">
			<param name="PACKAGE" value="${dir.package.action}" />
			<param name="ACCESS" value="private" />
		</antcall>
	</target>
	
	<target name="doc-entity" depends="doc-action,doc-buff">
		<antcall target="-doc">
			<param name="PACKAGE" value="${dir.package.entity}" />
			<param name="ACCESS" value="private" />
		</antcall>
	</target>
	
	
	<!-- PRIVATE TARGETS -->
	
	<!-- PACKAGE - The path of the package to build -->
	<!-- NAME - The name of the source file. Leave blank for all in package -->
	<target name="-build">
		<mkdir dir="${dir.root.build}" />
		<condition property="debug.on" value="on" else="off">
			<isset property="DEBUG_TYPE" />
		</condition>
		<condition property="debug.level" value="${DEBUG_TYPE}">
			<isset property="DEBUG_TYPE" />
		</condition>
		<condition property="source.name" value="${NAME}" else="*">
			<isset property="NAME" />
		</condition>
		<javac includeantruntime="false" srcdir="${dir.root.source}" destdir="${dir.root.build}" debug="${debug.on}" debuglevel="${debug.level}">
			<!-- <compilerarg value="-Werror" /> -->
			<compilerarg value="-Xlint:${warning_count}" />
			<include name="${PACKAGE}/${source.name}.java" />
		</javac>
	</target>
	
	<!-- Requires two params: -->
	<!-- PACKAGE - The path of the package to document -->
	<!-- ACCESS - The access modifier to use; defaults to protected -->
	<target name="-doc">
		<property name="SRC" value="${dir.root.source}/${PACKAGE}" />
		<property name="DEST" value="${dir.root.doc}" />
		<condition property="ACC" value="${ACCESS}" else="protected">
			<isset property="ACCESS" />
		</condition>
		<javadoc sourcepath="${SRC}" destdir="${DEST}" access="${ACC}" failonerror="true" />
	</target>
	
</project>
